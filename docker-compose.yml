services:
  # audit-log-service:
  #   build:
  #     context: .
  #     dockerfile: apps/audit-log/Dockerfile
  #   ports:
  #     - '3001:3001'
  #   depends_on:
  #     - postgres
  #     - redis
  #     - mongo
  #   environment:
  #     DATABASE_HOST: postgres # This is the key change!
  #     DATABASE_USERNAME: postgres
  #     DATABASE_PASSWORD: postgres
  #     DATABASE_NAME: audit_logs
  #     MONGO_URI: mongodb://mongo:27017/logs
  #   restart: always

  # user-service:
  #   build:
  #     context: . # 构建上下文是当前目录（monorepo 根目录）
  #     dockerfile: apps/user/Dockerfile # 指定使用哪个 Dockerfile
  #   ports:
  #     - '3002:3002'
  #   depends_on:
  #     - postgres
  #     - redis
  #     - mongo
  #   restart: always

  api-gateway:
    image: krakend:latest
    ports:
      - '8080:8080'
    volumes:
      - ./krakend.json:/etc/krakend/krakend.json
    command: ['run', '-c', '/etc/krakend/krakend.json']
    depends_on:
      # - audit-log-service
      # - user-service
      - postgres
      - mongo
      - redis
    restart: always # 可选：如果希望容器在退出时自动重启

  postgres: # 新增 PostgreSQL 服务
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres # 管理员用户名
      POSTGRES_PASSWORD: postgres # 管理员密码（生产环境请使用强密码）
      POSTGRES_DB: audit_logs # 默认创建的数据库
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data # 持久化数据
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d audit_logs']
      interval: 5s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:latest
    ports:
      - '27017:27017'
    volumes:
      - mongo-data:/data/db

  redis:
    image: redis:7
    ports:
      - '6379:6379'

volumes:
  mongo-data:
  postgres-data:
